{"version":3,"file":"static/js/989.aa1692fa.chunk.js","mappings":"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","sources":["components/popup/popup.js","components/questionanswer/QuestionList.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Popup = (props) => {\r\n  return props.trigger ? (\r\n    <Wrap className=\"popup\">\r\n      <div className=\"popup_inner\">\r\n        <CloseIcon className=\"close_btn\"\r\n          onClick={() => {\r\n            props.setTrigger(false);\r\n          }} />\r\n        \r\n        {props.children}\r\n      </div>\r\n    </Wrap>\r\n  ) : (\r\n    \"\"\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n\r\nconst Wrap = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgba(11, 11, 11, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 15;\r\n\r\n  .popup_inner {\r\n    position: relative;\r\n    // padding: 1rem 0;\r\n    // width: 100%;\r\n    max-width: 840px;\r\n    background-color: #fff;\r\n    margin: 0;\r\n    border-radius: 5px;\r\n    .close_btn {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 16px;\r\n      background: none;\r\n      color: #501F3A;\r\n      border: none;\r\n      font-size: 2rem;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { titleCase, transformURLString } from '../utils/stringConvert';\r\nimport { questionList } from '../utils/cardstext';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport FolderIcon from '@mui/icons-material/Folder';\r\nimport StartIcon from '@mui/icons-material/Start';\r\nimport Popup from '../popup/popup';\r\nimport { Button, Paper } from '@mui/material';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.getContrastText(\"#501F3A\"),\r\n  backgroundColor: \"#501F3A\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#CB2D6F\",\r\n  },\r\n}));\r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nconst QuestionList = () => {\r\n  const [data, setData] = useState([])\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  const [ButtonPopup, setButtonPopup] = React.useState(false);\r\n  const [check, setCheck] = React.useState(false)\r\n\r\n  let { list } = useParams();\r\n  let listid = { list }\r\n  if (list === 'question-answers') {\r\n    listid = 1\r\n  } else if (list === 'Essay') {\r\n    listid = 2\r\n  } else if (list === 'audio-question-answers') {\r\n    listid = 3\r\n  } else if (list === 'Speaking') {\r\n    listid = 4\r\n  }\r\n\r\n  const arr = questionList.filter((item) => item.id === listid);\r\n  // setData(arr[0])\r\n\r\n  let isLoading = false\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography sx={{ mt: 4, mb: 2 }} variant=\"h6\" component=\"div\">\r\n            Top 10 { transformURLString(list) } Quizes, you can take -\r\n          </Typography>\r\n          <Demo >\r\n            {arr && arr.length > 0 ? arr[0].list.map((item, index) => {\r\n              return (\r\n                // <Link to={'/'} >\r\n                <List dense={dense} onClick={() => setButtonPopup(true)}>\r\n                  <ListItem\r\n                    secondaryAction={\r\n                      <IconButton edge=\"end\" aria-label=\"delete\">\r\n                        <StartIcon />\r\n                      </IconButton>\r\n                    }\r\n                    key={index}\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        {index + 1}\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={item?.title.split(\" \").slice(0, 15).join(\" \") + '...'}\r\n                      secondary={secondary ? 'Secondary text' : null}\r\n                    />\r\n                  </ListItem>\r\n                </List>\r\n                // </Link>\r\n              )\r\n            }) : <h1>'Some - Thing Went Wrong'</h1>\r\n            }\r\n          </Demo>\r\n        </Grid>\r\n      </Box>\r\n      <Popup\r\n        trigger={ButtonPopup}\r\n        setTrigger={setButtonPopup}\r\n        className=\"Popup\"\r\n        style={{ padding: '1.5rem 0 0 0' }}\r\n      >\r\n        <div className=\"popup-inner\" style={{ width: '100%', margin: '0', padding: '0' }}>\r\n          <div>\r\n            <h2 style={{ margin: '2rem 15rem 1rem 1rem' }} className='text-capitalize'>Examples of Ielets exam test rules</h2>\r\n            <ul style={{ height: '200px', overflowY: 'auto', margin: '0 1rem' }}>\r\n              {Rules && Rules.length > 0 ?\r\n                Rules.map((items, index) => {\r\n                  return (\r\n                    <li key={index} style={{ display: 'flex', margin: '1rem 0' }}>\r\n                      <Avatar>{index + 1}</Avatar> <span style={{ marginLeft: '1rem' }}>{items}</span></li>\r\n                  )\r\n                })\r\n                : ''}\r\n\r\n            </ul>\r\n          </div>\r\n          <Paper elevation={3} style={{ padding: '1rem 1.5rem' }}>\r\n            <FormControlLabel required control={<Checkbox onClick={() => setCheck(!check)} />} label=\"Accept terms & conditions\" />\r\n            <Link to={`/home/${list}/quiz`}>\r\n              <ColorButton\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                disabled={!check}\r\n              >\r\n                {isLoading ? <RestartAltIcon className=\"loading\" /> : <>Next <StartIcon sx={{marginLeft: '10px'}}/></>}\r\n              </ColorButton>\r\n            </Link>\r\n          </Paper>\r\n        </div>\r\n      </Popup>\r\n    </React.Fragment >\r\n  )\r\n}\r\n\r\nexport default QuestionList;\r\n\r\nconst Rules = [\r\n  'You must use a functioning webcam and microphone',\r\n  'No cell phones or other secondary devices in the room or test area',\r\n  'Your desk/table must be clear or any materials except your test-taking device',\r\n  'No one else can be in the room with you',\r\n  'No talking',\r\n  'The testing room must be well-lit and you must be clearly visible',\r\n  'No dual screens/monitors',\r\n  'Do not leave the camera',\r\n  'No use of additional applications or internet'\r\n]\r\n\r\n"],"names":["props","trigger","_jsx","Wrap","className","children","_jsxs","CloseIcon","onClick","setTrigger","styled","_templateObject","_taggedTemplateLiteral","ColorButton","Button","_ref","color","theme","palette","getContrastText","backgroundColor","Demo","_ref2","background","paper","_useState","useState","_useState2","_slicedToArray","_React$useState","React","_React$useState2","dense","_React$useState3","_React$useState4","secondary","_React$useState5","_React$useState6","ButtonPopup","setButtonPopup","_React$useState7","_React$useState8","check","setCheck","list","useParams","listid","arr","questionList","item","id","Box","sx","display","justifyContent","Grid","xs","md","Typography","mt","mb","variant","component","transformURLString","length","map","index","List","ListItem","secondaryAction","IconButton","edge","StartIcon","ListItemAvatar","Avatar","ListItemText","primary","title","split","slice","join","Popup","style","padding","width","margin","height","overflowY","Rules","items","marginLeft","Paper","elevation","FormControlLabel","required","control","Checkbox","label","Link","to","concat","type","fullWidth","disabled","_Fragment"],"sourceRoot":""}